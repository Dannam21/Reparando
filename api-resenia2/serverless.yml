org: dannamendez
service: api-resenia

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 1024
  timeout: 30
  iam:
    role: arn:aws:iam::385301667309:role/LabRole
  environment:
    TABLE_NAME: ${sls:stage}-t_resenias
  apiGateway:
    cors: # Configuración global de CORS
      origins:
        - '*'  # Permite solicitudes de cualquier origen
      allowCredentials: false  # Cambiar según lo necesario (true si deseas habilitar cookies o autenticación)
      allowHeaders:
        - Content-Type
        - Authorization
        - X-Amz-Date
        - X-Api-Key
        - X-Amz-Security-Token
      allowMethods:
        - GET
        - POST
        - PUT
        - DELETE

functions:
  createCategoria:
    handler: create_categoria.lambda_handler
    events:
      - http:
          path: categoria/create
          method: post
          cors: true  # Habilitar CORS para este endpoint

  getCategoria:
    handler: get_categoria.lambda_handler
    events:
      - http:
          path: categoria/get
          method: get
          cors: true  # Habilitar CORS para este endpoint

  deleteCategoria:
    handler: delete_categoria.lambda_handler
    events:
      - http:
          path: categoria/delete
          method: delete
          cors: true  # Habilitar CORS para este endpoint

  listCategorias:
    handler: list_categorias.lambda_handler
    events:
      - http:
          path: categoria/list
          method: get
          cors: true  # Habilitar CORS para este endpoint

  updateCategoria:
    handler: update_categoria.lambda_handler
    events:
      - http:
          path: categoria/update
          method: put
          cors: true  # Habilitar CORS para este endpoint

resources:
  Resources:
    CategoriasDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.CATEGORIA_TABLE}
        AttributeDefinitions:
          - AttributeName: categoria_id
            AttributeType: S
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: nombre
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH   # Clave de partición
          - AttributeName: categoria_id
            KeyType: RANGE  # Clave de ordenación
        LocalSecondaryIndexes:
          - IndexName: LSI_Nombre
            KeySchema:
              - AttributeName: tenant_id  # Usamos 'tenant_id' como clave de partición para el LSI
                KeyType: HASH
              - AttributeName: nombre
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        GlobalSecondaryIndexes:
          - IndexName: GSI_TenantID
            KeySchema:
              - AttributeName: tenant_id
                KeyType: HASH  # Se usa 'tenant_id' para las consultas por inquilino
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 5

        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
